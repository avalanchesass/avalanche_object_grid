/* extract object_grid.css */
/*---
title:   Grid
section: Object
---

Fluid width, responsive grid system.

**TIP:** Most likely you want to use this package in combination with the [width utility package](https://github.com/avalanchesass/avalanche_utility_width).
*/
/**
 * Variables
 */
// Flexbox grid system.
$o-grid-flex: true !default;

// Vertical spacing between items.
$o-grid-spaced-vertical-breakpoints: () !default;

// Horizontal spacing between items.
$o-grid-spaced-horizontal-breakpoints: () !default;

// Spacing size between items.
$o-grid-spacing-sizes: (
  s: map-get($spacing, 'm'),
  m: map-get($spacing, 'm'),
  l: map-get($spacing, 'm'),
  xl: map-get($spacing, 'm')
) !default;

/**
 * Mixins
 */
@mixin o-grid($flex: $o-grid-flex) {
  @if $o-grid-flex {
    display: flex;
    flex-wrap: wrap;
  } @else {
    @include u-clearfix();
  }
}

@mixin o-grid-spaced-vertical($spacing: $o-grid-spacing-m, $item-selector: '.o-grid__item') {
  margin-top: -$spacing;
  > #{$item-selector} {
    margin-top: $spacing;
  }
}

@mixin o-grid-spaced-horizontal($spacing: $o-grid-spacing-m, $item-selector: '.o-grid__item') {
  margin-left: -$spacing;
  > #{$item-selector} {
    padding-left: $spacing;
  }
}

@mixin o-grid-item($flex: $o-grid-flex) {
  @if $o-grid-flex != true {
    float: left;
  }
}



/*---
title:   Default
section: Grid
---

Default responsive grid without spacing between items.

```example:html
<div class="o-grid">
  <div class="o-grid__item" style="width: 50%;">
    <div style="background: grey; padding: 0.5em;">width: 50%</div>
  </div>
  <div class="o-grid__item" style="width: 50%;">
    <div style="background: grey; padding: 0.5em;">width: 50%</div>
  </div>
  <div class="o-grid__item" style="width: 50%;">
    <div style="background: grey; padding: 0.5em;">width: 50%</div>
  </div>
  <div class="o-grid__item" style="width: 50%;">
    <div style="background: grey; padding: 0.5em;">width: 50%</div>
  </div>
</div>
```
*/
.o-grid {
  @include o-grid();
}

.o-grid__item {
  @include o-grid-item();
}



@if length($o-grid-spaced-vertical-breakpoints) >= 1 or length($o-grid-spaced-horizontal-breakpoints) >= 1 {
  /*---
  title:   Spaced
  section: Grid
  ---
  */
}
@if length($o-grid-spaced-vertical-breakpoints) >= 1 {
  /*---
  title:   Vertical
  section: Spaced
  ---

  Vertical spacing between grid items.

  ```example:html
  <div class="o-grid o-grid--spaced-vertical">
    <div class="o-grid__item" style="width: 100%;">
      <div style="background: grey; padding: 0.5em;">width: 100%</div>
    </div>
    <div class="o-grid__item" style="width: 100%;">
      <div style="background: grey; padding: 0.5em;">width: 100%</div>
    </div>
  </div>
  ```
  */
  .o-grid--spaced-vertical {
    @if index($o-grid-spaced-vertical-breakpoints, 's') {
      @include o-grid-spaced-vertical(map-get($o-grid-spacing-sizes, 's'));
    }
    @each $breakpoint-key in $o-grid-spaced-vertical-breakpoints {
      @if map-get($o-grid-spacing-sizes, 's') != map-get($o-grid-spacing-sizes, $breakpoint-key) {
        @media (min-width: map-get($breakpoints, $breakpoint-key)) {
          @include o-grid-spaced-vertical(map-get($o-grid-spacing-sizes, $breakpoint-key));
        }
      }
    }
  }
}

@if length($o-grid-spaced-horizontal-breakpoints) >= 1 {
  /*---
  title:   Horizontal
  section: Spaced
  ---

  Horizontal spacing between grid items.

  ```example:html
  <div class="o-grid o-grid--spaced-horizontal">
    <div class="o-grid__item" style="width: 50%;">
      <div style="background: grey; padding: 0.5em;">width: 50%</div>
    </div>
    <div class="o-grid__item" style="width: 50%;">
      <div style="background: grey; padding: 0.5em;">width: 50%</div>
    </div>
    <div class="o-grid__item" style="width: 50%;">
      <div style="background: grey; padding: 0.5em;">width: 50%</div>
    </div>
    <div class="o-grid__item" style="width: 50%;">
      <div style="background: grey; padding: 0.5em;">width: 50%</div>
    </div>
  </div>
  ```
  */
  .o-grid--spaced-horizontal {
    @if index($o-grid-spaced-horizontal-breakpoints, 's') {
      @include o-grid-spaced-horizontal(map-get($o-grid-spacing-sizes, 's'));
    }
    @each $breakpoint-key in $o-grid-spaced-horizontal-breakpoints {
      @if map-get($o-grid-spacing-sizes, 's') != map-get($o-grid-spacing-sizes, $breakpoint-key) {
        @media (min-width: map-get($breakpoints, $breakpoint-key)) {
          @include o-grid-spaced-horizontal(map-get($o-grid-spacing-sizes, $breakpoint-key));
        }
      }
    }
  }
}
/* end extract object_grid.css */
